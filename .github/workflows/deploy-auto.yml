name: Auto Deploy on Push

###################################
# # Usage
# # Deploy to dev
# git checkout dev
# git add .
# git commit -m "Update feature"
# git push origin dev          # ← Automatically deploys to dev!

# # Deploy to staging
# git checkout staging
# git merge dev
# git push origin staging      # ← Automatically deploys to staging!

# # Deploy to prod
# git checkout main
# git merge staging
# git push origin main         # ← Automatically deploys to prod!
###################################

on:
  push:
    branches:
      - dev
      - staging
      - main
    paths:
      - "infra/**"
      - ".github/workflows/deploy-auto.yml"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy CloudFormation Stack
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment name
        id: set_env
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          if [ "$BRANCH_NAME" = "main" ]; then
            ENV_NAME="prod"
          else
            ENV_NAME="$BRANCH_NAME"
          fi
          echo "environment=$ENV_NAME" >> $GITHUB_OUTPUT
          echo "Deploying branch: $BRANCH_NAME as environment: $ENV_NAME"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Verify AWS credentials
        run: |
          echo "AWS Account ID: $(aws sts get-caller-identity --query Account --output text)"
          echo "AWS Region: ${{ secrets.AWS_REGION }}"

      - name: Run deployment script
        run: |
          echo "Deploying environment: ${{ steps.set_env.outputs.environment }}"
          echo "Deploying to region: ${{ secrets.AWS_REGION }}"
          echo "GitHub repository: ${{ github.repository }}"
          chmod +x infra/deploy.sh
          cd infra
          AWS_REGION=${{ secrets.AWS_REGION }} CODESTAR_CONNECTION_ARN=${{ secrets.CODESTAR_CONNECTION_ARN }} STACK_NAME_PREFIX=${{ vars.STACK_NAME_PREFIX }} GITHUB_REPO=${{ github.repository }} ./deploy.sh ${{ steps.set_env.outputs.environment }}

      - name: Get CloudFormation outputs
        run: |
          STACK_NAME_PREFIX="${{ vars.STACK_NAME_PREFIX }}"
          STACK_NAME="${STACK_NAME_PREFIX}-${{ steps.set_env.outputs.environment }}"
          AWS_REGION="${{ secrets.AWS_REGION }}"
          echo "### Deployment Outputs" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          WEBSITE_URL=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`WebsiteURL`].OutputValue' \
            --output text \
            --region $AWS_REGION)

          BUCKET_NAME=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`BucketName`].OutputValue' \
            --output text \
            --region $AWS_REGION)

          PIPELINE_NAME=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`PipelineName`].OutputValue' \
            --output text \
            --region $AWS_REGION)

          CF_DIST_ID=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontDistributionId`].OutputValue' \
            --output text \
            --region $AWS_REGION)

          echo "| Output | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Environment | ${{ steps.set_env.outputs.environment }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS Region | $AWS_REGION |" >> $GITHUB_STEP_SUMMARY
          echo "| Website URL | $WEBSITE_URL |" >> $GITHUB_STEP_SUMMARY
          echo "| S3 Bucket | $BUCKET_NAME |" >> $GITHUB_STEP_SUMMARY
          echo "| Pipeline | $PIPELINE_NAME |" >> $GITHUB_STEP_SUMMARY
          echo "| CloudFront Distribution | $CF_DIST_ID |" >> $GITHUB_STEP_SUMMARY

      - name: Deployment summary
        if: success()
        run: |
          echo "Successfully deployed to ${{ steps.set_env.outputs.environment }} environment"

      - name: Deployment failed
        if: failure()
        run: |
          echo "Deployment to ${{ steps.set_env.outputs.environment }} environment failed"
          exit 1
